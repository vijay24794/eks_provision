name: Provision EKS Cluster

on: [push]
env:
  ECR_REPOSITORY: dso
  EKS_CLUSTER_NAME: k8s
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Set short git commit SHA
              id: commit
              uses: prompt/actions-commit-hash@v2
              
            - name: Checkout code
              uses: actions/checkout@v2.3.4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Install AWS CLI
              run: |
                curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install --update

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
                IMAGE_TAG: ${{ steps.commit.outputs.short }}
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            - name: Update kube config
              run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region us-east-1

            - name: Deploy to EKS
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
                IMAGE_TAG: ${{ steps.commit.outputs.short }}
              run: |
                sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" deployment.yaml && \
                kubectl apply -f deployment.yaml
               
